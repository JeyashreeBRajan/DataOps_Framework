name: Run Weather ETL DAG with Soda

on:
  workflow_dispatch:

jobs:
  run-weather-dag:
    runs-on: windows-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2️⃣ Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # 3️⃣ Install dependencies, copy DAG, initialize DB, trigger DAG
      - name: Install Airflow, copy DAG, initialize DB and trigger DAG
        shell: pwsh
        env:
          AIRFLOW_HOME: ${{ github.workspace }}\airflow_home
        run: |
          # Upgrade pip
          python -m pip install --upgrade pip

          # Install Airflow and dependencies
          pip install "pendulum<3"
          pip install "apache-airflow[all]==2.7.3" --constraint "https://raw.githubusercontent.com/apache/airflow/constraints-2.7.3/constraints-3.11.txt"
          pip install soda-core
          pip install -r requirements.txt

          # Create AIRFLOW_HOME and DAGs folder
          mkdir $Env:AIRFLOW_HOME
          mkdir $Env:AIRFLOW_HOME\dags

          # Copy the DAG file
          copy 05_dags\weather_pipeline_dag.py $Env:AIRFLOW_HOME\dags\

          # Initialize Airflow DB
          python -m airflow db upgrade
          python -m airflow connections create-default-connections

          # Trigger the Weather DAG
          python -m airflow dags trigger weather_pipeline

          # Sleep 30 seconds to let DAG start
          Start-Sleep -Seconds 30

      # 4️⃣ Ensure Soda Reports folder exists
      - name: Ensure Soda Reports folder exists
        shell: pwsh
        run: |
          if (-not (Test-Path "./06_Soda_reports")) {
            mkdir 06_Soda_reports
          }

      # 5️⃣ Upload Soda Reports as artifacts
      - name: Upload Soda Reports
        uses: actions/upload-artifact@v4
        with:
          name: soda-reports
          path: ./06_Soda_reports
