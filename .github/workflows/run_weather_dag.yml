name: Run Weather ETL DAG

on:
  workflow_dispatch:

jobs:
  run-dag:
    runs-on: ubuntu-latest

    env:
      AIRFLOW_HOME: ${{ github.workspace }}/airflow_home
      PYTHONPATH: ${{ github.workspace }}

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Set up Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # 3Ô∏è‚É£ Install system dependencies (for building packages)
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libpq-dev python3-dev python3-venv

      # 4Ô∏è‚É£ Upgrade pip, setuptools, wheel, and install Cython first
      - name: Upgrade pip and install Cython
        run: |
          python -m pip install --upgrade pip setuptools wheel Cython

      # 5Ô∏è‚É£ Install Airflow
      - name: Install Apache Airflow
        run: |
          pip install "apache-airflow==2.9.3" --constraint "https://raw.githubusercontent.com/apache/airflow/constraints-2.9.3/constraints-3.11.txt"

      # 6Ô∏è‚É£ Install other Python dependencies
      - name: Install Python packages
        run: |
          pip install pandas numpy psycopg2-binary soda-sql

      # 7Ô∏è‚É£ Create Airflow directories and copy DAGs
      - name: Setup Airflow directories
        run: |
          mkdir -p $AIRFLOW_HOME/dags
          mkdir -p $AIRFLOW_HOME/logs
          mkdir -p $AIRFLOW_HOME/plugins
          cp -r e_dags/* $AIRFLOW_HOME/dags/

      # 8Ô∏è‚É£ Initialize Airflow database
      - name: Initialize Airflow DB
        run: airflow db init

      # 9Ô∏è‚É£ List all DAGs to ensure registration
      - name: List DAGs
        run: airflow dags list

      # üîü Trigger Weather ETL DAG
      - name: Trigger Weather ETL DAG
        run: airflow dags trigger weather_pipeline
